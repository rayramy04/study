#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
========================================
  Python超入門 - 最小限の文法を丁寧に
========================================

【このファイルの使い方】
1. ターミナル（黒い画面）を開く
2. cdコマンドでこのファイルがある場所に移動
   例: cd /Users/ray/dev/study
3. 以下のコマンドで実行
   python3 python_basic.py
"""

# ========================================
# はじめに：コメントの書き方
# ========================================
# 「#」の後ろに書いた文字は「コメント」といって
# プログラムとして実行されません
# 自分用のメモや説明を書くのに使います

# ========================================
# 1. print（画面に文字を表示する）
# ========================================
print("=== 1. 文字を表示してみよう ===")

# 最も基本的な命令が print() です
# カッコの中に書いたものを画面に表示します
print("Hello, World!")
print("こんにちは、Python！")

# 空行を入れたい時は print() だけ書きます
print()

# ========================================
# 2. 変数（データに名前をつける）
# ========================================
print("=== 2. 変数を使ってみよう ===")

# 変数は「データを入れる箱」のようなもの
# 「変数名 = 値」の形で書きます

# 文字列（文字のデータ）
name = "田中太郎"  # 名前を入れる変数
print(name)        # 変数の中身を表示

# 整数（整数のデータ）
age = 25           # 年齢を入れる変数
print(age)         # 25 と表示される

# 小数（小数点のあるデータ）
height = 170.5     # 身長を入れる変数
print(height)      # 170.5 と表示される

# 真偽値（正しい/間違いを表すデータ）
is_student = True  # 学生かどうか（True=はい、False=いいえ）
print(is_student)  # True と表示される

print()

# ========================================
# 3. 文字列の結合とf文字列
# ========================================
print("=== 3. 文字を組み合わせよう ===")

# 変数と文字を組み合わせて表示する方法
# f"文字{変数}文字" の形で書きます（f文字列）
print(f"私の名前は{name}です")
print(f"年齢は{age}歳です")

# 複数の変数も使えます
print(f"{name}さんは{age}歳で、身長は{height}cmです")

print()

# ========================================
# 4. 計算（四則演算）
# ========================================
print("=== 4. 計算してみよう ===")

# 基本的な計算
a = 10
b = 3

print(f"{a} + {b} = {a + b}")    # 足し算
print(f"{a} - {b} = {a - b}")    # 引き算
print(f"{a} × {b} = {a * b}")    # 掛け算（*を使う）
print(f"{a} ÷ {b} = {a / b}")    # 割り算（/を使う）
print(f"{a} ÷ {b} の余り = {a % b}")  # 余り（%を使う）

print()

# ========================================
# 5. リスト（複数のデータをまとめる）
# ========================================
print("=== 5. リストを使ってみよう ===")

# リストは複数のデータをまとめて扱うための仕組み
# [データ1, データ2, データ3] の形で書きます
fruits = ["りんご", "バナナ", "みかん"]
print(f"果物リスト: {fruits}")

# リストの要素を取り出す（0から数えることに注意！）
print(f"1番目の果物: {fruits[0]}")  # りんご
print(f"2番目の果物: {fruits[1]}")  # バナナ
print(f"3番目の果物: {fruits[2]}")  # みかん

# リストに要素を追加する
fruits.append("ぶどう")  # append = 追加する
print(f"追加後: {fruits}")

# リストの長さ（要素の数）を調べる
print(f"果物の数: {len(fruits)}個")

print()

# ========================================
# 6. if文（条件によって処理を変える）
# ========================================
print("=== 6. 条件分岐してみよう ===")

# if文は「もし〜なら」という条件判断をする
# インデント（字下げ）が重要！

score = 85  # テストの点数

if score >= 90:
    # 90点以上の場合
    print("素晴らしい！A評価です")
elif score >= 80:
    # 80点以上90点未満の場合
    print("よくできました！B評価です")
elif score >= 70:
    # 70点以上80点未満の場合
    print("合格です！C評価です")
else:
    # それ以外（70点未満）の場合
    print("もう少し頑張りましょう")

# 複数の条件を組み合わせる
user_age = 20
has_license = True

if user_age >= 18 and has_license:
    # 18歳以上 かつ 免許を持っている場合
    print("車を運転できます")
else:
    print("車を運転できません")

print()

# ========================================
# 7. for文（繰り返し処理）
# ========================================
print("=== 7. 繰り返し処理をしてみよう ===")

# for文は同じ処理を繰り返すときに使う

# range(数)で、0から指定した数-1まで繰り返す
print("3回繰り返す:")
for i in range(3):
    print(f"  {i}回目の処理")  # 0, 1, 2 と表示

# リストの要素を1つずつ処理する
print("\n果物を1つずつ表示:")
for fruit in fruits:
    print(f"  - {fruit}")

print()

# ========================================
# 8. 関数（処理をまとめて名前をつける）
# ========================================
print("=== 8. 関数を作って使ってみよう ===")

# 関数は「処理のまとまり」に名前をつけたもの
# def 関数名(引数):
#     処理
#     return 結果

def greet(person_name):
    """挨拶をする関数"""
    message = f"こんにちは、{person_name}さん！"
    return message

# 関数を使う（呼び出す）
result = greet("山田花子")
print(result)

# 計算する関数の例
def add_numbers(x, y):
    """2つの数を足す関数"""
    total = x + y
    return total

# 関数を使って計算
answer = add_numbers(15, 25)
print(f"15 + 25 = {answer}")

print()

# ========================================
# 9. 入力を受け取る
# ========================================
print("=== 9. ユーザーからの入力 ===")

# input()で、ユーザーが入力した文字を受け取れる
# 実行時にコメントを外して試してください
# user_name = input("あなたの名前を入力してください: ")
# print(f"こんにちは、{user_name}さん！")

# 数値として扱いたい場合は int() で変換
# user_age = int(input("年齢を入力してください: "))
# print(f"あなたは{user_age}歳ですね")

print("（入力機能はコメントアウトしています）")
print()

# ========================================
# 10. ファイルの読み書き
# ========================================
print("=== 10. ファイルを扱ってみよう ===")

# ファイルに書き込む
# with open("ファイル名", "w") as 変数名:
#     変数名.write("書き込む内容")

file_name = "memo.txt"
with open(file_name, "w", encoding="utf-8") as f:
    f.write("Pythonから書き込みました！\n")
    f.write("2行目のテキストです。")

print(f"{file_name}を作成しました")

# ファイルを読み込む
# with open("ファイル名", "r") as 変数名:
#     内容 = 変数名.read()

with open(file_name, "r", encoding="utf-8") as f:
    content = f.read()
    print(f"ファイルの内容: {content}")

print()
print("=" * 50)
print("お疲れさまでした！")
print("これがPythonの最も基本的な10個の機能です。")
print("コードを少しずつ変更して、動作を確認してみてください。")
print("=" * 50)

# ========================================
# 練習してみよう
# ========================================
# 1. 自分の名前を変数に入れて表示してみる
# 2. 好きな数字を2つ変数に入れて、足し算してみる
# 3. 好きな食べ物のリストを作って、for文で表示してみる
# 4. 自分の年齢で if文 を使って「成人/未成年」を判定してみる